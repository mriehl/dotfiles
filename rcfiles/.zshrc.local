## Local Variables:
## mode: shell-script
## End:  

## use the vi navigation keys (hjkl) besides cursor keys in menu completion
bindkey -M menuselect 'h' vi-backward-char        # left
bindkey -M menuselect 'k' vi-up-line-or-history   # up
bindkey -M menuselect 'l' vi-forward-char         # right
bindkey -M menuselect 'j' vi-down-line-or-history # bottom

bindkey -M isearch . self-insert

setopt interactivecomments

# get top 10 shell commands:
alias top10='print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10'

# Use a default width of 80 for manpages for more convenient reading
export MANWIDTH=${MANWIDTH:-80}

# Find out which libs define a symbol
lcheck() {
    if [[ -n "$1" ]] ; then
        nm -go /usr/lib/lib*.a 2>/dev/null | grep ":[[:xdigit:]]\{8\} . .*$1"
    else
        echo "Usage: lcheck <function>" >&2
    fi
}

# Memory overview
memusage() {
    ps aux | awk '{if (NR > 1) print $5;
                   if (NR > 2) print "+"}
                   END { print "p" }' | dc
}

# print hex value of a number
hex() {
    emulate -L zsh
    if [[ -n "$1" ]]; then
        printf "%x\n" $1
    else
        print 'Usage: hex <number-to-convert>'
        return 1
    fi
}

# Misc settings
# -------------
## ctrl-s will no longer freeze the terminal.
stty erase "^?"


if check_com vim && [[ -f /usr/local/bin/vim ]]; then
    vim() {
        VIM_PLEASE_SET_TITLE='yes' /usr/bin/emacs -nw ${VIM_OPTIONS} "$@"
    }
fi

fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

cdpath=(~/workspace)

# Aliases
# -------
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias insecssh='ssh -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null" -o "PreferredAuthentications=keyboard-interactive"'

# pstop -- ps with top-like output
# from http://chneukirchen.org/dotfiles/.zshrc
pstop() {
  ps -eo pid,user,pri,ni,vsz,rsz,stat,pcpu,pmem,time,comm --sort -pcpu |
    head "${@:--n 20}"
}

alias ex='simple-extract'

alias pacman-autoremove='sudo pacman -Rns $(pacman -Qqtd)'

alias targzlook='tar -ztvf'

alias targzcomp='tar -zcvf'

# no X "integration", I'd like to stay in the shell, thanks
alias emacs='emacsclient -nw'

alias vim='emacsclient -nw'

function vimit (){
    [[ -z "$1" ]] && { echo "wat" && return 1 }
    WHAT=$(find . -readable -name "*$1*") || { echo "nope" && return 1 }
    emacsclient -nw "$WHAT"
}

function ediff() {
    if [ "X${2}" = "X" ]; then
        echo "USAGE: ediff <FILE 1> <FILE 2>"
    else
        # The --eval flag takes lisp code and evaluates it with EMACS
        emacsclient -nw --eval "(ediff-files \"$1\" \"$2\")"
    fi
}

alias osbt='./sbt "set offline := true" shell'

alias tmux='tmux -2'

alias keymap='setxkbmap'
alias 'keymap?'='setxkbmap -query'


# Environment
# -------------

PYTHONSTARTUP=~/.pythonrc.py
export PYTHONSTARTUP

export GOPATH=~/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:~/.cargo/bin
export PATH=$PATH:~/bin

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export PATH="/usr/local/sbin:$PATH"
export PATH=$PATH:/usr/local/go/bin

export PINENTRY_USER_DATA="USE_CURSES=1"
unset GPG_AGENT_INFO
unset SSH_ASKPASS

# make less suck less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;38;5;74m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[38;5;246m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[04;38;5;146m'
export LESS_TERMCAP_so=$'\e[0;31m'

export BROWSER="firefox"

export EDITOR='emacsclient -nw'
export SUDO_EDITOR='emacsclient -nw'
alias emacs='emacsclient -nw'
alias reconfigureEmacs='/usr/bin/emacsclient --eval "(load-file \"~/.emacs.d/init.el\")"'
alias estart='systemctl --user start emacs.service'
alias estop='systemctl --user stop emacs.service'
alias erestart='estop && estart'
alias uemacs='/usr/bin/emacs'
alias docker-killall='docker kill $(docker ps -q)'
alias docker-be-gone='docker rmi -f $(docker images -a -q); docker rm -f $(docker ps -a -q)'
alias export-dm='eval $(docker-machine env devel); export HOSTNAME="$(docker-machine ip devel)"; export BIND_HOST=$HOSTNAME'

export NVM_DIR="$HOME/.nvm"
alias nvm-source="source $NVM_DIR/nvm.sh"

alias back-to-master='git checkout master && git uff && git branch --merged | egrep -v "(^\*|master|dev)" | xargs git branch -d'


if [[ -x "$(command -v fw)" ]];
then
  eval $(fw print-zsh-setup -f 2>/dev/null);
fi;

export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxMetaspaceSize=512M -XX:MetaspaceSize=256M -Xms512M -Xmx2G -XX:+UseG1GC -Xss4096K"

export SSH_AUTH_SOCK=/run/user/1000/ssh-agent.socket


export JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::")
export JDK_HOME=$(readlink -f /usr/bin/javac | sed "s:bin/javac::")

prompt off
eval "$(starship init zsh)"

SSH_ASKPASS=/usr/lib/ssh/x11-ssh-askpass
