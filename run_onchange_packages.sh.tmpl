#!/bin/bash

echo "Triggered changed package hook on OS {{ .chezmoi.os }}"

{{ if eq .chezmoi.os "darwin" -}}
brew bundle --no-lock --file=/dev/stdin <<EOF
{{- range .packages.darwin.brew.formulae }}
brew {{ . | quote }}
{{- end }}
{{- range .packages.darwin.brew.casks }}
cask {{ . | quote }}
{{- end }}
EOF

{{- else if eq .chezmoi.os "linux" }}

pacman_packages=( {{.packages.linux.arch.pacman | quoteList | join " " }})
aur_packages=( {{.packages.linux.arch.aur | quoteList | join " " }})

installed_packages=($(pacman -Qq))

is_installed() {
  [[ " ${installed_packages[*]} " =~ " $1 " ]]
}

to_install_pacman=()
for package in "${pacman_packages[@]}"; do
  if ! is_installed "$package"; then
    to_install_pacman+=("$package")
  fi
done

if [[ ${#to_install_pacman[@]} -gt 0 ]]; then
  echo "  - Installing missing packages via pacman: ${to_install_pacman[@]}"
  sudo pacman -S --noconfirm "${to_install_pacman[@]}"
fi

if ! is_installed "yay"; then
  echo "  - Installing yay"
  sudo pacman -S --noconfirm yay
fi

to_install_aur=()
for package in "${aur_packages[@]}"; do
  if ! is_installed "$package"; then
    to_install_aur+=("$package")
  fi
done

if [[ ${#to_install_aur[@]} -gt 0 ]]; then
  echo "  - Installing missing AUR packages via yay: ${to_install_aur[@]}"
  yay -S --noconfirm "${to_install_aur[@]}"
fi

{{- end }}
